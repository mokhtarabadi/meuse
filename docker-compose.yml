version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: meuse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - meuse-network

  meuse:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MAVEN_OPTS=-Dmaven.repo.local=/maven-cache
      cache_from:
        - type=local,target=maven-cache
    container_name: meuse-registry
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./config:/app/config:ro
      - ./data/crates:/app/crates
      - ./data/index:/app/index
      - ./data/logs:/app/logs
      - maven_cache:/maven-cache
    environment:
      MEUSE_CONFIGURATION: /app/config/config.yaml
      # Database
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      # Frontend
      MEUSE_FRONTEND_SECRET: ${MEUSE_FRONTEND_SECRET}
      # Users
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_DESCRIPTION: ${ADMIN_DESCRIPTION}
      TECH_USER: ${TECH_USER}
      TECH_PASSWORD: ${TECH_PASSWORD}
      TECH_DESCRIPTION: ${TECH_DESCRIPTION}
      READONLY_USER: ${READONLY_USER}
      READONLY_PASSWORD: ${READONLY_PASSWORD}
      READONLY_DESCRIPTION: ${READONLY_DESCRIPTION}
      # Git config
      GIT_EMAIL: ${GIT_EMAIL}
      GIT_USERNAME: ${GIT_USERNAME}
    ports:
      - "${MEUSE_PORT:-8855}:${MEUSE_PORT:-8855}"
    networks:
      - meuse-network

volumes:
  postgres_data:
    name: meuse_postgres_data
  maven_cache:
    name: maven_cache

networks:
  meuse-network:
    name: meuse-network