# GitHub Actions workflow to build and push Docker image to GitHub Container Registry
name: Build and Push Docker Image

# Trigger on pushes to main/master branch and on release tags
on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Extract version from project.clj
      - name: Extract version from project.clj
        id: project-version
        run: |
          VERSION=$(grep -m 1 "defproject meuse" project.clj | grep -o '"[0-9]\+\.[0-9]\+\.[0-9]\+"' | tr -d '"')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version extracted: $VERSION"
      
      # Login to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Setup Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.VERSION }},enable=true
          labels: |
            org.opencontainers.image.title=Meuse
            org.opencontainers.image.description=A free crate registry for the Rust programming language
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
      
      # Build and push Docker image
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Optional: Generate artifact attestation for the image
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true